package com.java._14_Xml._01_Base;

import org.junit.Test;

import java.io.UnsupportedEncodingException;

/*
XML - англ eXtensible Markup Language расширяемый язык разметки текстовый
формат, предназначенный для хранения структурированных данных для обмена
информацией между программами, а также для создания на его основе более
специализированных языков разметки
Язык называется расширяемым поскольку он не фиксирует разметку, используемую
в документах :
разработчик волен создать разметку в соответствии с потребностями к
конкретной области, будучи ограниченным лишь синтаксическими правилами
языка

XML – это описанная в текстовом формате иерархическая структура, предназначенная для хранения любых данных.
Визуально структура может быть представлена как дерево элементов. Элементы XML описываются тегами.
XML файл состоит из объявления, корневого элемента, комментариев, тегов.

Документ XML
• объявление XML - первая строка документа, в которой указывается версия,
кодировка текста и другие зависимости
• корневой элемент - является основным телом документа, у каждого документа
может быть только один корневой элемент
• теги - вложенные элементы документа, могут иметь атрибуты и содержимое
• комментарии - текст размещенный в теге

Первая строка XML – документа называется объявлением XML (англ. XML declaration) – это строка, указывающая версию XML.
В версии 1.0 объявление XML может быть опущено, но, начиная с версии 1.1, оно обязательно.
Также здесь может быть указана кодировка символов и наличие внешних зависимостей.

Корневой элемент – документ имеет только один корневой элемент (англ. root element)
(так же иногда называемый элемент документа (англ. document element)). Это означает, что текст или другие
данные всего документа должны быть расположены между единственным начальным корневым тегом
и соответствующим ему конечным тегом.

Комментарий – в любом месте дерева может быть размещен элемент-комментарий.
XML-комментарии размещаются внутри специального тега, начинающегося с символов <! --
и заканчивающегося символами -->. Два знака дефис (--) внутри комментария присутствовать не могут.

Теги – остальная часть этого XML-документа, которая состоит из вложенных элементов,
некоторые из которых имеют атрибуты и содержимое. Элемент обычно состоит из открывающего и закрывающего тегов,
обрамляющих текст и другие элементы. Открывающий тег состоит из имени элемента в угловых скобках,
а закрывающий тег состоит из того же имени в угловых скобках, но перед именем ещё добавляется косая черта.
Имена элементов, как и имена атрибутов, не могут содержать пробелы, но могут быть на любом языке,
поддерживаемом кодировкой XML-документа. Имя может начинаться с буквы, подчёркивания, двоеточия.
Остальными символами имени могут быть те же символы, а также цифры, дефис, точка.

Содержимым элемента (англ. content) называется всё, что расположено между открывающим и закрывающим тегами,
включая текст и другие (вложенные) элементы.


DOM (от англ Document Object Model «объектная модель документа») это не зависящий
от платформы и языка программный интерфейс, позволяющий программам получить доступ
к содержимому HTML XHTML и XML документов а также изменять содержимое, структуру и
оформление таких документов
Модель DOM не накладывает ограничений на структуру документа Любой документ
известной структуры с помощью DOM может быть представлен в виде дерева узлов, каждый
узел которого представляет собой элемент, атрибут, текстовый, графический или любой
другой объект
Узлы связаны между собой отношениями "родительский дочерний"
Сама модель DOM это конечный результат разбора XML строки (из файла или из какого-то
другого источника например из сети по URL)

Типы узлов
• Document - контейнер для всех узлов в дереве.
Он также называется корнем документа
• Element - элемент
• Attribute - атрибут элемента
• Text - текст.

SAX (Simple API for XML) это набор классов и интерфейсов, задача которых дать
механизм разбора XML в строковом представлении
Основными два класса
1. SAXParser
2. DefaultHandler

StAX (Streaming API for XML) – последовательное чтение из источника XML.
Документ читается последовательно по кусочкам (событиям). API между собой отличаются тем,
что SAX основан на модели push, а Stax на модели pull. Работать со StAX гораздо удобнее.
Мы последовательно читаем из документа события, анализируем их и обрабатываем подходящие.

Java Architecture for XML Binding (JAXB позволяет разработчикам ставить в
соответствие Java классы и XML представления
JAXB предоставляет две основные возможности :
маршаллирование Java объектов в XML и наоборот, то есть демаршализация
из XML обратно в Java объект
Маршалинг - процесс преобразования представления объекта в памяти в
формат данных, пригодный для хранения или передачи
Обычно применяется, когда данные необходимо передавать между
различными частями одной программы или от одной программы к другой
Анмаршалинг - обратный процесс маршалинга
Межпроцессная, междоменная и межуровневая сериализация-десериализация, называется маршалингом-демаршалингом.

*/

public class Main {
    @Test
    public void TestExternalizable1() throws UnsupportedEncodingException {
        // Считываем файл.xml
        XMLParser xml = new XMLParser("files/2.xml");

        // Указываем путь, что будем считывать с файла xml
        String value = xml.get("catalog/book/author");
        System.out.println(value);
    }
}